# Generated by Django 4.2.1 on 2023-05-09 04:56

import apps.users.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255, null=True, verbose_name='Street')),
                ('num_int', models.PositiveSmallIntegerField(null=True, verbose_name='Number Intern')),
                ('num_ext', models.PositiveSmallIntegerField(null=True, verbose_name='Number Extern')),
                ('suburb', models.CharField(max_length=255, null=True, verbose_name='Suburb')),
                ('town', models.CharField(max_length=255, null=True, verbose_name='Town')),
                ('state', models.CharField(max_length=255, verbose_name='State')),
                ('country', models.CharField(max_length=255, verbose_name='Coutry')),
                ('zip_code', models.CharField(max_length=255, null=True, verbose_name='Zip Code')),
                ('status_delete', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'db_table': 'address',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('about_me', models.CharField(max_length=200, null=True, verbose_name='About me')),
                ('name', models.CharField(max_length=150, null=True, verbose_name='name')),
                ('paternal_surname', models.CharField(max_length=150, null=True, verbose_name='paternal surname')),
                ('mothers_maiden_name', models.CharField(max_length=150, null=True, verbose_name='mother maiden name')),
                ('birthdate', models.DateField(null=True, verbose_name='birthdate')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='email')),
                ('phone', models.CharField(max_length=13, null=True, verbose_name='phone')),
                ('image', models.ImageField(blank=True, default='default.jpg', max_length=255, null=True, upload_to=apps.users.models.upload_load)),
                ('gender', models.CharField(max_length=2, null=True, verbose_name='Gender')),
                ('subscribed', models.BooleanField(default=False)),
                ('token', models.CharField(default=None, max_length=40, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('status_delete', models.BooleanField(default=False)),
                ('hidden_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=[], size=None)),
                ('status', models.CharField(choices=[('Buscando empleo', 'Buscando empleo'), ('Contratado', 'Contratado'), ('Postulado', 'Postulado')], default='Buscando trabajo', max_length=50, verbose_name='Status')),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(choices=[(1, 'Super Admin'), (2, 'Admin'), (3, 'Company'), (4, 'Padawan'), (5, 'Foreign')], on_delete=django.db.models.deletion.CASCADE, to='general.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'ordering': ('id',),
            },
        ),
    ]
